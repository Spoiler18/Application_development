@page "/"

@using BlogUI.Models
@using BlogUI.Services

@inject BlogService blogService

<style>
    .blogs-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    margin-top: 20px;
}

.blog-card {
    width: calc(50% - 20px); /* Two cards in each row */
    margin-bottom: 20px;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    background-color: #ffffff; /* White background */
    transition: transform 0.3s ease;
}

    .blog-card:hover {
        transform: scale(1.05); /* Enlarge on hover */
    }

    .blog-card h2 {
        color: #333333; /* Dark text color */
        font-size: 20px;
        margin-bottom: 10px;
    }

    .blog-card p {
        color: #666666; /* Medium gray text color */
        font-size: 16px;
        line-height: 1.5;
    }

    .blog-card a {
        color: #007bff; /* Blue link color */
        text-decoration: none; /* Remove underline */
        transition: color 0.3s ease; /* Smooth transition on hover */
    }

        .blog-card a:hover {
            color: #0056b3; /* Darker blue color on hover */
        }

</style>

<div>
    <div class="blogs-container">
        @if (blogs != null && blogs.Any())
        {
            @foreach (var blog in blogs)
            {
                <div class="blog-card">
                    <div>
                        <h2>@blog.blogTitle</h2>
                        <p>@blog.blogDescription</p>
                        <p>By: @blog.fullName</p>
                    </div>
                    <div class="d-flex justify-content-between align-items-center">
                        <a href="/blogDetail?id=@blog.blogId">Read More</a>
                    </div>
                </div>
            }
        }
        else
        {
            <p>No blogs found.</p>
        }
    </div>
</div>


@code{
    private IEnumerable<Blog> blogs { get; set; }


    protected override async Task OnInitializedAsync()
    {
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await GetBlogList();
            StateHasChanged();
        }
    }

    public async Task GetBlogList()
    {
        blogs = await blogService.GetBlogListForBlogs();
    }
}
