@page "/"

@using BlogUI.Models
@using BlogUI.Services

@inject BlogService blogService

<style>
    .blogs-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        grid-gap: 20px;
        margin-top: 20px;
    }

    .blog-card {
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        background-color: #ffffff; /* White background */
        transition: transform 0.3s ease;
    }

        .blog-card:hover {
            transform: translateZ(-5px); /* Move up on hover */
        }

        .blog-card h2 {
            color: #333333; /* Dark text color */
            font-size: 20px;
            margin-bottom: 10px;
        }

        .blog-card p {
            color: #666666; /* Medium gray text color */
            font-size: 16px;
            line-height: 1.5;
        }
</style>

<div>
    <div class="blogs-container">
        @if (blogs != null && blogs.Any())
        {
            @foreach (var blog in blogs)
            {
                <div class="blog-card">
                    <div>
                        <h2>@blog.blogTitle</h2>
                        <p>@blog.blogDescription</p>
                        <p>By: @blog.fullName</p>
                    </div>
                    <div class="d-flex justify-content-between align-items-center">
                        <a href="/blog?id=@blog.blogId">Read More</a>
                    </div>
                </div>
            }
        }
        else
        {
            <p>No blogs found.</p>
        }
    </div>
</div>


@code{
    private IEnumerable<Blog> blogs { get; set; }


    protected override async Task OnInitializedAsync()
    {
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await GetBlogList();
            StateHasChanged();
        }
    }

    public async Task GetBlogList()
    {
        blogs = await blogService.GetBlogListForBlogs();
    }
}
