@page "/dashboard"

@using BlogUI.Models
@using BlogUI.Services

@inject BlogService blogService
@inject Common common
@inject NavigationManager navManager

<style>
    .blogs-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        grid-gap: 20px;
        margin-top: 20px;
    }

    .blog-card {
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        background-color: #ffffff; /* White background */
        transition: transform 0.3s ease;
    }

        .blog-card:hover {
            transform: translateY(-5px); /* Move up on hover */
        }

        .blog-card h2 {
            color: #333333; /* Dark text color */
            font-size: 20px;
            margin-bottom: 10px;
        }

        .blog-card p {
            color: #666666; /* Medium gray text color */
            font-size: 16px;
            line-height: 1.5;
        }
</style>

<div class="blogs-container">
    @if (blogs != null && blogs.Any())
    {
        @foreach (var blog in blogs)
        {
            <div class="blog-card">
                <h2>@blog.blogTitle</h2>
                <p>@blog.blogDescription</p>
                <p>By: @blog.userId</p>
            </div>
        }
    }
    else
    {
        <p>No blogs found.</p>
    }
</div>

@code{
    private UserContext userContext = new UserContext();
    private IEnumerable<Blog> blogs { get; set; }

    protected override async Task OnInitializedAsync()
    {
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            userContext = await common.GetUserContext();
            if(userContext.userId > 0)
            {
                await GetBlogList();
                StateHasChanged();
            }
            else
            {
                navManager.NavigateTo("/");
            }
        }
    }

    public async Task GetBlogList()
    {
        blogs = await blogService.GetBlogList();
    }
}
